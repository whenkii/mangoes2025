--drop table transactions;

create table transactions(id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY primary key,
                          src VARCHAR2(100) not null, -- fireign key on users.id
                          tgt VARCHAR2(100) not null,-- fireign key on users.id
                          amount number,
                          currency varchar2(10) NOT NULL,
                          comments varchar2(1000) not null,
                          shipment number, -- fireign key on shipment.name
                          ts date default sysdate,
                          status varchar2(10) default 'NEW',
                          added_by VARCHAR2(100), -- foreign key on users.id
                          approved_ts date,
                          add_comments varchar2(1000)
                          );
                          
CREATE OR REPLACE TYPE TRANSACTION_REC as OBJECT(src varchar2(100) , -- fireign key on users.id
                          tgt varchar2(100) ,-- fireign key on users.id
                          amount varchar2(10),
                          currency varchar2(10),
                          comments varchar2(1000),
                          shipment varchar2(10), -- fireign key on shipment.name
                          added_by varchar2(100), -- foreign key on users.id
                          add_comments varchar2(1000));
                          

CREATE OR REPLACE PROCEDURE sp_insert_transactions(p_in IN TRANSACTION_REC,
                                                   p_out OUT varchar2) AS
BEGIN
p_out := 'OK';

IF (p_in.src = p_in.tgt) THEN
p_out := 'SOURCE and TRAGET users cant be same';
return;
END IF;

  INSERT INTO transactions (src ,tgt ,amount,currency,comments ,shipment ,added_by,add_comments)
  VALUES (p_in.SRC,p_in.tgt,p_in.amount,p_in.currency,p_in.comments,p_in.shipment,p_in.added_by,p_in.add_comments);
  
  COMMIT;
  
EXCEPTION
when others then
p_out := 'Some error '||SQLCODE;
END sp_insert_transactions;
/
